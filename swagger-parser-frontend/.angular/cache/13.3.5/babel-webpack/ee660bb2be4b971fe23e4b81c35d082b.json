{"ast":null,"code":"// import { Component, OnInit, Input, ChangeDetectorRef } from '@angular/core';\n// import { Observable } from 'rxjs';\n// import { finalize, tap } from 'rxjs/operators';\n//\n// @Component({\n//   selector: 'upload-task',\n//   templateUrl: './upload-task.component.html'\n//   // styleUrls: ['./upload-task.component.scss']\n// })\n// export class UploadTaskComponent implements OnInit {\n//\n//   @Input() file: File;\n//\n//   task: AngularFireUploadTask;\n//\n//   percentage: Observable<number>;\n//   snapshot: Observable<any>;\n//   downloadURL: string;\n//\n//   constructor(private storage: AngularFireStorage, private db: AngularFirestore) { }\n//\n//   ngOnInit() {\n//     this.startUpload();\n//   }\n//\n//   startUpload() {\n//\n//     // The storage path\n//     const path = `test/${Date.now()}_${this.file.name}`;\n//\n//     // Reference to storage bucket\n//     const ref = this.storage.ref(path);\n//\n//     // The main task\n//     this.task = this.storage.upload(path, this.file);\n//\n//     // Progress monitoring\n//     this.percentage = this.task.percentageChanges();\n//\n//     this.snapshot   = this.task.snapshotChanges().pipe(\n//       tap(console.log),\n//       // The file's download URL\n//       finalize( async() =>  {\n//         this.downloadURL = await ref.getDownloadURL().toPromise();\n//\n//         this.db.collection('files').add( { downloadURL: this.downloadURL, path });\n//       }),\n//     );\n//   }\n//\n//   isActive(snapshot) {\n//     return snapshot.state === 'running' && snapshot.bytesTransferred < snapshot.totalBytes;\n//   }\n//\n// }","map":{"version":3,"sources":["/Users/kamillahajrullina/WebstormProjects/diploma/src/app/upload-task/upload-task.component.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// import { Component, OnInit, Input, ChangeDetectorRef } from '@angular/core';\n// import { Observable } from 'rxjs';\n// import { finalize, tap } from 'rxjs/operators';\n//\n// @Component({\n//   selector: 'upload-task',\n//   templateUrl: './upload-task.component.html'\n//   // styleUrls: ['./upload-task.component.scss']\n// })\n// export class UploadTaskComponent implements OnInit {\n//\n//   @Input() file: File;\n//\n//   task: AngularFireUploadTask;\n//\n//   percentage: Observable<number>;\n//   snapshot: Observable<any>;\n//   downloadURL: string;\n//\n//   constructor(private storage: AngularFireStorage, private db: AngularFirestore) { }\n//\n//   ngOnInit() {\n//     this.startUpload();\n//   }\n//\n//   startUpload() {\n//\n//     // The storage path\n//     const path = `test/${Date.now()}_${this.file.name}`;\n//\n//     // Reference to storage bucket\n//     const ref = this.storage.ref(path);\n//\n//     // The main task\n//     this.task = this.storage.upload(path, this.file);\n//\n//     // Progress monitoring\n//     this.percentage = this.task.percentageChanges();\n//\n//     this.snapshot   = this.task.snapshotChanges().pipe(\n//       tap(console.log),\n//       // The file's download URL\n//       finalize( async() =>  {\n//         this.downloadURL = await ref.getDownloadURL().toPromise();\n//\n//         this.db.collection('files').add( { downloadURL: this.downloadURL, path });\n//       }),\n//     );\n//   }\n//\n//   isActive(snapshot) {\n//     return snapshot.state === 'running' && snapshot.bytesTransferred < snapshot.totalBytes;\n//   }\n//\n// }\n"]},"metadata":{},"sourceType":"script"}